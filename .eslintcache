[{"/Users/ling/Desktop/React_App_Test/MarketView/src/index.js":"1","/Users/ling/Desktop/React_App_Test/MarketView/src/history.js":"2","/Users/ling/Desktop/React_App_Test/MarketView/src/components/App.js":"3","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/index.js":"4","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/Watchlist.js":"5","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/Home.js":"6","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/UsStock.js":"7","/Users/ling/Desktop/React_App_Test/MarketView/src/components/errors/PageNotFound.js":"8","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SearchResult.js":"9","/Users/ling/Desktop/React_App_Test/MarketView/src/components/errors/FetchError.js":"10","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/authReducer.js":"11","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/themeReducer.js":"12","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/fetchNewsDataReducer.js":"13","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/modalReducer.js":"14","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/inputValueReducer.js":"15","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/drawerReducer.js":"16","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/searchSymbolReducer.js":"17","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/fetchStockReducer.js":"18","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/indicesReducer.js":"19","/Users/ling/Desktop/React_App_Test/MarketView/src/actions/index.js":"20","/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/index.js":"21","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/stockHomeReducer.js":"22","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/index.js":"23","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/NewsCard.js":"24","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/StockTable.js":"25","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/NewsPortal.js":"26","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/IndexBox.js":"27","/Users/ling/Desktop/React_App_Test/MarketView/src/actions/types.js":"28","/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/PageAppBar.js":"29","/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/AppDrawer.js":"30","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/Tab.js":"31","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/Header.js":"32","/Users/ling/Desktop/React_App_Test/MarketView/src/apis/newsAPI.js":"33","/Users/ling/Desktop/React_App_Test/MarketView/src/apis/iexAPI.js":"34","/Users/ling/Desktop/React_App_Test/MarketView/src/apis/financialModelingAPI.js":"35","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/Quote.js":"36","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/CallingMinChart.js":"37","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/CallingDayChart.js":"38","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/MinChart.js":"39","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/DayChart.js":"40","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/assets/canvasjs.stock.react.js":"41","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/assets/canvasjs.stock.min.js":"42","/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/ThemeSwitch.js":"43","/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/SearchBar.js":"44","/Users/ling/Desktop/React_App_Test/MarketView/src/components/auth/GoogleAuth.js":"45","/Users/ling/Desktop/React_App_Test/MarketView/src/apis/polygonioAPI.js":"46"},{"size":703,"mtime":1613014550921,"results":"47","hashOfConfig":"48"},{"size":87,"mtime":1611591497382,"results":"49","hashOfConfig":"48"},{"size":2471,"mtime":1613104779882,"results":"50","hashOfConfig":"48"},{"size":1089,"mtime":1613039171044,"results":"51","hashOfConfig":"48"},{"size":678,"mtime":1611565334658,"results":"52","hashOfConfig":"48"},{"size":7964,"mtime":1613104874752,"results":"53","hashOfConfig":"48"},{"size":569,"mtime":1613042328074,"results":"54","hashOfConfig":"48"},{"size":947,"mtime":1612678895600,"results":"55","hashOfConfig":"48"},{"size":2003,"mtime":1613030697262,"results":"56","hashOfConfig":"48"},{"size":1021,"mtime":1612682602706,"results":"57","hashOfConfig":"48"},{"size":628,"mtime":1611661341055,"results":"58","hashOfConfig":"48"},{"size":376,"mtime":1612685305495,"results":"59","hashOfConfig":"48"},{"size":256,"mtime":1612176435032,"results":"60","hashOfConfig":"48"},{"size":447,"mtime":1612000157090,"results":"61","hashOfConfig":"48"},{"size":315,"mtime":1611737472105,"results":"62","hashOfConfig":"48"},{"size":318,"mtime":1613039142679,"results":"63","hashOfConfig":"48"},{"size":254,"mtime":1612696305099,"results":"64","hashOfConfig":"48"},{"size":564,"mtime":1612894558914,"results":"65","hashOfConfig":"48"},{"size":301,"mtime":1612686908771,"results":"66","hashOfConfig":"48"},{"size":4944,"mtime":1613039117595,"results":"67","hashOfConfig":"48"},{"size":380,"mtime":1613104199730,"results":"68","hashOfConfig":"48"},{"size":421,"mtime":1612691373485,"results":"69","hashOfConfig":"48"},{"size":928,"mtime":1612688103268,"results":"70","hashOfConfig":"48"},{"size":2590,"mtime":1612690599992,"results":"71","hashOfConfig":"48"},{"size":4465,"mtime":1613104887199,"results":"72","hashOfConfig":"48"},{"size":5904,"mtime":1612254723858,"results":"73","hashOfConfig":"48"},{"size":1774,"mtime":1612687341021,"results":"74","hashOfConfig":"48"},{"size":637,"mtime":1612894359949,"results":"75","hashOfConfig":"48"},{"size":4043,"mtime":1613105105764,"results":"76","hashOfConfig":"48"},{"size":5533,"mtime":1613103521555,"results":"77","hashOfConfig":"48"},{"size":4042,"mtime":1613014058542,"results":"78","hashOfConfig":"48"},{"size":4379,"mtime":1612755733517,"results":"79","hashOfConfig":"48"},{"size":98,"mtime":1611817117780,"results":"80","hashOfConfig":"48"},{"size":428,"mtime":1613028918280,"results":"81","hashOfConfig":"48"},{"size":110,"mtime":1612686213202,"results":"82","hashOfConfig":"48"},{"size":973,"mtime":1612629794934,"results":"83","hashOfConfig":"48"},{"size":1111,"mtime":1613014154255,"results":"84","hashOfConfig":"48"},{"size":1111,"mtime":1612894646248,"results":"85","hashOfConfig":"48"},{"size":15589,"mtime":1613027372017,"results":"86","hashOfConfig":"48"},{"size":14473,"mtime":1613035124795,"results":"87","hashOfConfig":"48"},{"size":3628,"mtime":1612581281211,"results":"88","hashOfConfig":"48"},{"size":573293,"mtime":1612581281181,"results":"89","hashOfConfig":"48"},{"size":1069,"mtime":1612679931999,"results":"90","hashOfConfig":"48"},{"size":2906,"mtime":1613042288932,"results":"91","hashOfConfig":"48"},{"size":2069,"mtime":1611663947653,"results":"92","hashOfConfig":"48"},{"size":99,"mtime":1613028956767,"results":"93","hashOfConfig":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"j2k4wi",{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"96"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"96"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"96"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"96"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"96"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"96"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"96"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"96"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"96"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"96"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"96"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"96"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"96"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"96"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"96"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"194","usedDeprecatedRules":"96"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"/Users/ling/Desktop/React_App_Test/MarketView/src/index.js",[],["205","206"],"/Users/ling/Desktop/React_App_Test/MarketView/src/history.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/App.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/index.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/Watchlist.js",["207"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nconst Watchlist = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    return (\n        <React.Fragment>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\n                <h1>watchlist</h1>\n            </main>\n        </React.Fragment>\n    );\n};\n\nexport default Watchlist;","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/Home.js",["208"],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/UsStock.js",["209"],"import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(1),\n    },\n}));\n\n\n\n\n\nconst Highlight = () => {\n    const classes = useStyles();\n    const theme = useTheme();\n    return (\n        <React.Fragment>\n            <main className={classes.content}>\n                <div className={classes.toolbar} />\nstock page!\n</main>\n        </React.Fragment>\n    );\n};\n\nexport default Highlight;","/Users/ling/Desktop/React_App_Test/MarketView/src/components/errors/PageNotFound.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SearchResult.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/errors/FetchError.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/authReducer.js",["210"],"import { GOOG_SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn: null,\n    OAuth: null,\n    userId: null,\n    email: null\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case GOOG_SIGN_IN:\n            return {\n                ...state,\n                isSignedIn: true,\n                OAuth: \"Google\",\n                userId: action.payload.userId,\n                email: action.payload.email\n            };\n        case SIGN_OUT:\n            return { ...state, isSignedIn: false, userId: null };\n        default:\n            return state;\n    }\n};","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/themeReducer.js",["211"],"import { DARK_MODE } from '../actions/types';\n\nconst dark = localStorage.getItem('darkMode') === \"true\" ? true : false;\nconst INITIAL_STATE = {\n    darkMode: dark\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case DARK_MODE:\n            return { darkMode: action.isDarkModeOn };\n        default:\n            return state;\n    }\n};","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/fetchNewsDataReducer.js",["212"],"import { BUSINESS_NEWS } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case BUSINESS_NEWS:\n            return { ...state, articles: action.payload };\n        default:\n            return state;\n    }\n}","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/modalReducer.js",["213"],"import { OPEN_MODAL, CLOSE_MODAL } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isModalOpen: false,\n    index: 0\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case OPEN_MODAL:\n            return { ...state, isModalOpen: true, index: action.payload };\n        case CLOSE_MODAL:\n            return { ...state, isModalOpen: false, index: 0 };\n        default:\n            return state;\n    }\n};\n\n","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/inputValueReducer.js",["214"],"import { INPUT_VALUE } from '../actions/types';\n\nconst INITIAL_STATE = {\n    inputValue: null\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case INPUT_VALUE:\n            return { ...state, inputValue: action.payload }\n        default:\n            return state;\n    }\n};","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/drawerReducer.js",["215"],"import { DRAWER_TOGGLE } from '../actions/types';\n\nconst INITIAL_STATE = {\n    drawerOpen: false,\n};\n\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case DRAWER_TOGGLE:\n            return { drawerOpen: action.isDrawerOpen };\n        default:\n            return state;\n    };\n};","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/searchSymbolReducer.js",["216"],"import { SEARCH_SYMBOL } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case SEARCH_SYMBOL:\n            return { ...state, result: action.payload };\n        default:\n            return state;\n    }\n}","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/fetchStockReducer.js",["217"],"import { FETCH_DAYCHART, FETCH_MINCHART, FETCH_SSQUOTE, ERROR } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_DAYCHART:\n            return { ...state, dayChart: action.payload.dayChart };\n        case FETCH_MINCHART:\n            return { ...state, minChart: action.payload.minChart };\n        case FETCH_SSQUOTE:\n            return { ...state, resQuote: action.payload };\n        case ERROR:\n            return { ...state, error: action.payload }\n        default:\n            return state;\n    }\n}","/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/indicesReducer.js",["218"],"import { FETCH_INDICES } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_INDICES:\n            return {\n                ...state,\n                indices: action.payload,\n            };\n        default:\n            return state;\n    }\n};","/Users/ling/Desktop/React_App_Test/MarketView/src/actions/index.js",["219"],"import {\n    GOOG_SIGN_IN, SIGN_OUT, INPUT_VALUE, BUSINESS_NEWS,\n    DARK_MODE, DRAWER_TOGGLE, OPEN_MODAL,\n    CLOSE_MODAL, FETCH_HOMESTOCK,\n    FETCH_INDICES, FETCH_DAYCHART, FETCH_MINCHART, FETCH_SSQUOTE, ERROR, SEARCH_SYMBOL\n} from './types';\nimport businessNews from '../apis/newsAPI';\nimport IEX from '../apis/iexAPI';\nimport FM from '../apis/financialModelingAPI'\nimport Polygon from '../apis/polygonioAPI'\nimport history from '../history';\n\n\n\n//Auth\nexport const googSignIn = (userId, email) => {\n    return {\n        type: GOOG_SIGN_IN,\n        payload: {\n            userId: userId,\n            email: email\n        }\n    }\n};\n\nexport const signOut = () => {\n    return {\n        type: SIGN_OUT\n    }\n};\n\nexport const inputSearchBar = (input) => {\n    return {\n        type: INPUT_VALUE,\n        payload: input\n    }\n};\n\nexport const fetchBusinessNews = () => async dispatch => {\n    const response = await businessNews.get('/top-headlines', {\n        params: {\n            sources: 'business-insider,the-wall-street-journal',\n            apiKey: 'e43b9bd75f60429d83c267510ede0e74'\n        }\n    });\n    dispatch({ type: BUSINESS_NEWS, payload: response.data.articles })\n};\n\nexport const darkModeOn = (isDarkModeOn) => {\n    localStorage.setItem('darkMode', isDarkModeOn);\n    return {\n        type: DARK_MODE,\n        isDarkModeOn\n    }\n};\n\n\nexport const handleDrawerToggle = (isDrawerOpen) => {\n\n    return {\n        type: DRAWER_TOGGLE,\n        isDrawerOpen\n    }\n};\n\nexport const handleModalOpen = (index) => {\n    return {\n        type: OPEN_MODAL,\n        payload: index\n    }\n};\n\nexport const handleModalClose = () => {\n    return {\n        type: CLOSE_MODAL\n    }\n}\n\nexport const fetchHomeStock = () => async dispatch => {\n    const resGain = await IEX.get('/stock/market/list/gainers', {\n        params: {\n            token: 'Tsk_9a99bd2bfde342bb9a614405ce41eaf6',\n        }\n    }).catch(err => {\n        if (err.response) {\n            // client received an error response (5xx, 4xx)\n        } else if (err.request) {\n            // client never received a response, or request never left\n        } else {\n            // anything else\n        }\n    });\n    const resLose = await IEX.get('/stock/market/list/losers', {\n        params: {\n            token: 'Tsk_9a99bd2bfde342bb9a614405ce41eaf6',\n        }\n    });\n    const resActive = await IEX.get('/stock/market/list/mostactive', {\n        params: {\n            token: 'Tsk_9a99bd2bfde342bb9a614405ce41eaf6',\n        }\n    });\n\n\n    dispatch({\n        type: FETCH_HOMESTOCK, payload: {\n            gainers: resGain,\n            losers: resLose,\n            active: resActive,\n        }\n    })\n};\n\nexport const fetchIndices = () => async dispatch => {\n    const resIndices = await FM.get('api/v3/quote/%5EGSPC,%5EDJI,%5EIXIC', {\n        params: {\n            apikey: 'b126ba1a12f849380cf5010d6725957d',\n        }\n    });\n\n    dispatch({\n        type: FETCH_INDICES,\n        payload: resIndices.data,\n    })\n}\n\nexport const fetchDayChart = (symb) => async dispatch => {\n    const resDayChart = await IEX.get(`/stock/${symb}/chart/3y`, {\n        params: {\n            token: 'Tsk_bd95bcb47f3f4b1b8e061b1ea86c0b21',\n        }\n    });\n\n    dispatch({\n        type: FETCH_DAYCHART,\n        payload: {\n            dayChart: resDayChart.data,\n        }\n    })\n};\n\nexport const fetchSSQuote = (symb) => async dispatch => {\n    const resQuote = await IEX.get(`/stock/${symb}/quote`, {\n        params: {\n            token: 'Tpk_2686f6769c314df4b72d32cb961c115c',\n        }\n    }).catch(err => {\n        if (err.response) {\n            dispatch({\n                type: ERROR,\n                payload: err.response,\n            })\n            history.push('/error')\n\n        } else if (err.request) {\n            history.push('/')\n        } else {\n            history.push('/')\n        }\n    })\n\n\n    const resStat = await IEX.get(`/stock/${symb}/stats`, {\n        params: {\n            token: 'Tsk_bd95bcb47f3f4b1b8e061b1ea86c0b21',\n        }\n    });\n\n    if (resQuote !== undefined) {\n        dispatch({\n            type: FETCH_SSQUOTE,\n            payload: resQuote.data,\n        })\n    }\n}\n\nexport const searchSymb = (symb) => async dispatch => {\n    const resSearch = await Polygon.get('/v2/reference/tickers', {\n        params: {\n            sort: 'ticker',\n            '?type': 'cs',\n            search: `${symb}`,\n            market: 'stocks',\n            locale: 'us',\n            apiKey: 'KgVsqTE75pOyzqhII7HITcTNNKZrRup6',\n        }\n    })\n    dispatch({\n        type: SEARCH_SYMBOL,\n        payload: resSearch.data,\n    })\n};\n\nexport const fetchMinChart = (symb) => async dispatch => {\n    const resMinChart = await IEX.get(`/stock/${symb}/chart/1d`, {\n        params: {\n            token: 'Tsk_987a1026563e417fa348d4a8d78e6463',\n        }\n    });\n\n    dispatch({\n        type: FETCH_MINCHART,\n        payload: {\n            minChart: resMinChart.data,\n        }\n    })\n};\n\n","/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/index.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/reducers/stockHomeReducer.js",["220"],"import { FETCH_HOMESTOCK } from '../actions/types';\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case FETCH_HOMESTOCK:\n            return {\n                ...state,\n                gainers: action.payload.gainers.data,\n                losers: action.payload.losers.data,\n                active: action.payload.active.data,\n            };\n        default:\n            return state;\n    }\n}","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/index.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/NewsCard.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/StockTable.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/NewsPortal.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/IndexBox.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/actions/types.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/PageAppBar.js",["221","222"],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/AppDrawer.js",["223","224","225","226","227","228","229","230","231","232","233","234"],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/Tab.js",["235"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nimport CallingDayChart from '../../reusable/Chart/CallingDayChart'\nimport CallingMinChart from '../../reusable/Chart/CallingMinChart'\nimport Quote from './Quote'\n\nconst StyledTabs = withStyles({\n    root: {\n        borderTop: '4px solid #e8e8e8',\n    },\n    indicator: {\n        display: 'flex',\n        justifyContent: 'center',\n        backgroundColor: '#808080',\n        height: '3px',\n        '& > span': {\n            // maxWidth: 80,\n            width: '100%',\n            backgroundColor: '#808080',\n        },\n    },\n})(Tabs);\n\nconst StyledTab = withStyles((theme) => ({\n    root: {\n        textTransform: 'none',\n        textColor: 'primary',\n        fontWeight: theme.typography.fontWeightRegular,\n        fontSize: theme.typography.pxToRem(15),\n        marginRight: theme.spacing(1),\n        '&:focus': {\n            opacity: 1,\n        },\n        '&:hover': {\n            opacity: 1,\n            backgroundColor: 'rgb(0,0,0,0.03)'\n        },\n    },\n}))((props) => <Tab disableRipple {...props} />);\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`scrollable-auto-tabpanel-${index}`}\n            aria-labelledby={`scrollable-auto-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        width: '100%',\n        maxWidth: '1250px',\n        backgroundColor: theme.palette.background.paper,\n    },\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            {/* <AppBar position=\"static\" color=\"default\"> */}\n            <StyledTabs\n                value={value}\n                onChange={handleChange}\n                variant=\"scrollable\"\n                scrollButtons=\"auto\"\n                aria-label=\"scrollable auto tabs\"\n            >\n                <StyledTab label=\"Quote\" {...a11yProps(0)} />\n                <StyledTab label=\"Min Chart\" {...a11yProps(1)} />\n                <StyledTab label=\"Day Chart\" {...a11yProps(2)} />\n                <StyledTab label=\"News\" {...a11yProps(3)} />\n                <StyledTab label=\"Statistic\" {...a11yProps(4)} />\n                <StyledTab label=\"Discussion\" {...a11yProps(5)} />\n            </StyledTabs>\n            {/* </AppBar> */}\n            <TabPanel value={value} index={0}>\n                <Quote />\n            </TabPanel>\n\n            <TabPanel value={value} index={1}>\n                <CallingMinChart symb={props.symb} />\n            </TabPanel>\n\n            <TabPanel value={value} index={2}>\n\n                <CallingDayChart symb={props.symb} />\n            </TabPanel>\n\n            <TabPanel value={value} index={3}>\n                Item Four\n            </TabPanel>\n\n            <TabPanel value={value} index={4}>\n                Item Five\n            </TabPanel>\n\n            <TabPanel value={value} index={5}>\n                Item Six\n            </TabPanel>\n\n        </div>\n    );\n}\n","/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/Header.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/apis/newsAPI.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/apis/iexAPI.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/apis/financialModelingAPI.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/pages/SymbolDetail/Quote.js",["236","237","238","239","240","241","242","243"],"import React from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport {\n    Table, TableBody, TableCell, TableRow\n} from '@material-ui/core';\n\nconst styles = (theme) => ({\n    table: {\n        minWidth: 170,\n    },\n\n});\n\nconst StyledTableCell = withStyles(() => ({\n    root: {\n        paddingBottom: 1,\n        paddingTop: 1,\n        fontSize: '13px',\n        borderTop: 'none',\n        borderBottom: 'none',\n        borderLeft: 'solid',\n        borderWidth: '2px',\n        fontWeight: '600',\n    },\n}))(TableCell);\n\nconst textColor = (value) => {\n    if (value > 0) {\n        return '#2a9d8f';\n    } if (value < 0) {\n        return '#e63946';\n    }\n    return 'black';\n};\n\n\nclass Quote extends React.Component {\n\n    render() {\n        return (\n            <div>\n                Quote\n            </div>\n        )\n    }\n};\n\n\n\nexport default withStyles(styles)(Quote);","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/CallingMinChart.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/CallingDayChart.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/MinChart.js",["244","245","246","247"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CanvasJSReact from './assets/canvasjs.stock.react';\nlet CanvasJS = CanvasJSReact.CanvasJS;\nconst CanvasJSStockChart = CanvasJSReact.CanvasJSStockChart;\n\nconst risingColor = '#2a9d8f';\nconst fallingColor = '#e63946';\n\n\nclass Chart extends Component {\n\n    state = {\n        dataPoints1: [],\n        dataPoints2: [],\n        dataPoints3: [],\n        isLoaded: false,\n        break: [],\n        ma: [],\n    };\n\n\n    componentDidMount() {\n\n        //set data from props to variables\n        const loadData = (sData) => {\n            let dps1 = [], dps2 = [], dps3 = [];\n            sData.map(data => {\n                dps1.push({\n                    x: new Date(\n                        // data.date.slice(1, 4),\n                        // data.date.slice(5, 6),\n                        // data.date.slice(8),\n                        '2021',\n                        '01',\n                        '10',\n                        data.minute.slice(0, 2),\n                        data.minute.slice(4)),\n                    y: [\n                        Number(data.open),\n                        Number(data.high),\n                        Number(data.low),\n                        Number(data.close)\n                    ],\n                });\n                // dps2.push({\n                //     x: new Date(\n                //         data.date.slice(0, 3),\n                //         data.date.slice(5, 6),\n                //         data.date.slice(8),\n                //         data.minute.slice(0, 2),\n                //         data.minute.slice(4), '00'), y: Number(data.volume)\n                // });\n                // dps3.push({ x: new Date(data.minute), y: Number(data.close) });\n            });\n\n            //set color to the data\n            const changeBorderColor = (data) => {\n                for (let i = 0; i < data.length; i++) {\n                    data[i].color = (data[i].y[0] <= data[i].y[3]) ? risingColor : fallingColor;\n                }\n            };\n            changeBorderColor(dps1);\n\n            console.log(sData[0].date)\n            //set variables to the state\n            this.setState({\n                isLoaded: true,\n                dataPoints1: dps1,\n                // dataPoints2: dps2,\n                // dataPoints3: dps3\n            });\n\n            // create break data and set it into state\n            const addbreaks = (data) => {\n                const customBreaks = [];\n                for (let i = 1; i < data.length; i++) {\n                    const diffBetweenDps = Date.parse(data[i].x) - Date.parse(data[i - 1].x);\n                    if (diffBetweenDps > (60 * 1000)) {\n                        const startValue = new Date(Date.parse(data[i - 1].x) + (60 * 1000));\n                        const endValue = data[i].x;\n                        customBreaks.push({\n                            startValue: startValue,\n                            endValue: endValue,\n                            spacing: 0,\n                            lineThickness: 0,\n                        })\n                    }\n                };\n\n                this.setState({ break: customBreaks })\n            };\n            addbreaks(dps1)\n\n            //function for moving average\n            // const sma = (dps, num, name, color) => {\n            //     const result = []\n\n            //     if (dps.length <= num) return [];\n            //     for (let i = num; i < dps.length; i++) {\n            //         let total = 0;\n            //         for (let j = (i - num); j < i; j++) {\n            //             total += dps[j].y[3];\n            //         }\n            //         result.push({\n            //             x: dps[i].x,\n            //             y: total / num,\n            //             toolTipContent: null,\n            //         })\n            //     }\n            //     return {\n            //         type: 'spline',\n            //         markerSize: 0,\n            //         name: name,\n            //         dataPoints: result,\n            //         showInLegend: true,\n            //         lineThickness: 1.5,\n            //         legendText: name,\n            //         color: color,\n\n            //     };\n            // }\n            // const maLine = [\n            //     sma(dps1, 5, 'MA5', '#f39237'),\n            //     sma(dps1, 10, 'MA10', '#40bcd8'),\n            //     sma(dps1, 20, 'MA20', '#b388eb'),\n            //     sma(dps1, 30, 'MA30', '#1c77c3'),\n            //     sma(dps1, 60, 'MA60', '#97d8c4'),\n            // ]\n\n\n            // this.setState({ ma: maLine });\n        };\n\n        loadData(this.props.stockData);\n\n    };\n\n\n    render() {\n        const gridColor = this.props.darkTheme === false ? '#ced4da' : '#939597';\n        const yAxisDetail = {\n            labelFontColor: this.props.darkTheme === false ? 'black' : 'white',\n            labelFontFamily: 'roboto',\n            labelBackgroundColor: this.props.darkTheme === false ? 'rgb(0,0,0,0.1)' : 'rgb(0,0,0,0.4)',\n            tickLength: 0,\n            gridDashType: 'dash',\n            labelPlacement: 'inside',\n            tickPlacement: 'inside',\n            margin: 0,\n            gridColor: gridColor,\n        }\n\n        const renderTheme = () => {\n            return this.props.darkTheme === false ? 'bright2' : 'dark1';\n        }\n\n        const options = {\n            theme: renderTheme(),\n\n            charts: [{\n                axisX: {\n                    lineThickness: 3,\n                    tickLength: 0,\n                    lineColor: gridColor,\n                    interval: (60 * 1000),\n                    valueFormatString: 'DD MMM hh:mm TT',\n                    labelFormatter: (e) => {\n                        return '';\n                    },\n                    crosshair: {\n                        enabled: true,\n                        snapToDataPoint: true,\n                        color: this.props.darkTheme === false ? 'black' : 'white',\n                        labelFormatter: (e) => {\n                            return '';\n                        },\n                    },\n                    scaleBreaks: {\n                        type: \"straight\",\n                        fillOpacity: 1,\n                        customBreaks: [\n                            ...this.state.break\n                        ]\n                    },\n                },\n                axisY: {\n                    ...yAxisDetail,\n                    prefix: '$',\n                    // labelAngle: 345,\n                    labelFontWeight: 500,\n\n                    crosshair: {\n                        enabled: true,\n                        labelFontSize: 10,\n                        labelFontFamily: 'roboto',\n                        color: this.props.darkTheme === false ? 'black' : 'white',\n                    },\n                },\n                toolTip: {\n                    shared: true,\n                    fontFamily: 'Roboto',\n                    fontSize: 12,\n                    frontWeight: 300,\n                    backgroundColor: this.props.darkTheme === false ? 'rbg(255,255,255,0.7)' : 'rgb(42,42,42,0.8)',\n                },\n                legend: {\n                    dockInsidePlotArea: true,\n                    verticalAlign: 'top',\n                    horizontalAlign: 'center',\n                    fontFamily: 'roboto',\n                    fontSize: 11,\n                    fontWeight: '350',\n                    itemclick: (e) => {\n                        if (typeof (e.dataSeries.visible) === \"undefined\" || e.dataSeries.visible) {\n                            e.dataSeries.visible = false;\n                        } else {\n                            e.dataSeries.visible = true;\n                        }\n                        this.chart.render();\n                    },\n                    itemTextFormatter: (e) => {\n                        return ''\n                    }\n                },\n                data: [{\n                    name: 'Price (in USD)',\n                    yValueFormatString: '$#,###.##',\n                    type: 'candlestick',\n                    dataPoints: this.state.dataPoints1,\n                    risingColor: this.props.darkTheme === false ? 'white' : '#2a2a2a',\n                    fallingColor: fallingColor,\n                    xValueFormatString: 'DD MMM hh:mm TT',\n                },\n                    // ...this.state.ma\n                ],\n\n            },\n                // {\n                //     height: 100,\n                //     axisX: {\n                //         title: 'Volume',\n                //         labelFontFamily: 'roboto',\n                //         labelFontSize: 10,\n                //         valueFormatString: 'DD/MM/YY hh:mm:ss tt',\n                //         crosshair: {\n                //             enabled: true,\n                //             snapToDataPoint: true,\n                //             labelFontFamily: 'roboto',\n                //             color: this.props.darkTheme === false ? 'black' : 'white',\n                //         },\n                //         scaleBreaks: {\n                //             type: \"straight\",\n                //             fillOpacity: 0,\n                //             customBreaks: [\n                //                 ...this.state.break\n                //             ]\n                //         },\n                //         labelFormatter: (e) => {\n                //             return '';\n                //         },\n                //         labelAngle: -20\n                //     },\n                //     axisY: {\n                //         // prefix: '$',\n                //         // tickLength: 0,\n                //         // gridDashType: 'dash',\n                //         // gridColor: gridColor,\n                //         // labelPlacement: 'inside',\n                //         // tickPlacement: 'inside',\n                //         // labelFontColor: 'white',\n                //         // labelBackgroundColor: 'rgb(0,0,0,0.4)',\n                //         ...yAxisDetail,\n                //         prefix: '$',\n                //         labelFormatter: (e) => {\n                //             if (e.value > 1000000) {\n                //                 return e.value / 1000000 + 'M';\n                //             } else if (e.value > 1000000) {\n                //                 return e.value / 1000000 + 'M';\n                //             } else if (e.value > 1000) {\n                //                 return e.value / 1000 + 'K';\n                //             } else return e.value;\n                //         },\n                //     },\n                //     toolTip: {\n                //         shared: true,\n                //         fontFamily: 'Roboto',\n                //         fontSize: 12,\n                //         frontWeight: 300,\n                //         backgroundColor: this.props.darkTheme === false ? 'rbg(255,255,255,0.7)' : 'rgb(42,42,42,0.8)',\n                //     },\n                //     data: [{\n                //         name: 'Volume',\n                //         yValueFormatString: '$#,###.##',\n                //         xValueFormatString: 'DD/MM/YY hh:mm:ss tt',\n                //         type: 'column',\n                //         color: '#f5cb5c',\n                //         dataPoints: this.state.dataPoints2\n                //     }]\n                // }\n            ],\n            // navigator: {\n\n            //     height: 40,\n            //     dynamicUpdate: false,\n            //     slider: {\n            //         maskColor: 'grey',\n            //         maskOpacity: .3,\n            //         handleHeight: 25,\n            //     },\n            //     data: [{\n            //         type: 'line',\n            //         markerSize: 0,\n            //         xValueFormatString: 'DD MMM hh:mm tt',\n            //         dataPoints: this.state.dataPoints3,\n            //         color: '#275dad',\n            //     }],\n            //     axisX: {\n            //         interval: 3,\n            //         intervalType: 'month',\n            //         valueFormatString: 'DD MMM hh:mm tt',\n            //         ...yAxisDetail,\n            //         // labelFontFamily: 'roboto',\n            //         // labelFontColor: 'white',\n            //         // labelFontSize: 11,\n            //         // labelBackgroundColor: 'rgb(0,0,0,0.6)',\n            //         // labelFontWeight: '300',\n            //         labelFormatter: (e) => {\n            //             return CanvasJS.formatDate(e.value, \"hh:mm\");\n            //         },\n            //         scaleBreaks: {\n            //             type: 'straight',\n            //             fillOpacity: 1,\n            //             customBreaks: [\n            //                 ...this.state.break\n            //             ]\n            //         },\n            //     },\n            // },\n            // rangeSelector: {\n            //     label: '',\n            //     selectedRangeButtonIndex: 2,\n            //     buttons: [{\n            //         range: 1,\n            //         rangeType: 'month',\n            //         label: '10m'\n            //     }, {\n            //         range: 3,\n            //         rangeType: 'month',\n            //         label: '30m'\n            //     }, {\n            //         range: 6,\n            //         rangeType: 'month',\n            //         label: '1hr'\n            //     }, {\n            //         rangeType: 'all',\n            //         label: 'All' //Change it to \"All\"\n            //     }],\n            //     buttonStyle: {\n            //         backgroundColorOnHover: 'rgba(0, 0, 0, 0.0)',\n            //         backgroundColorOnSelect: 'rgba(0, 0,0 , 0.5)',\n            //         backgroundColor: 'rgba(0, 0, 0, 0.0)',\n            //         borderThickness: 0,\n            //         labelFontColor: '#8d99ae',\n            //         labelFontColorOnHover: '#e9ecef',\n            //         labelFontSize: 11,\n            //         labelFontStyle: 'bold',\n            //         labelFontFamily: 'roboto',\n            //     },\n            //     inputFields: {\n            //         style: {\n            //             fontSize: 10,\n            //             fontColor: '#8d99ae',\n            //             fontFamily: 'roboto',\n            //             fontStyle: 'bold',\n            //             borderThickness: 0,\n            //             padding: { left: 2, right: 2, top: 1, bottom: 1 },\n            //             backgroundColor: 'rgba(0, 0,0 , 0)',\n            //         },\n            //     },\n            // },\n            animationEnabled: true,\n            animationDuration: 300,\n        };\n        const containerProps = {\n            maxWidth: '1000px',\n            width: '100%',\n            height: '500px',\n            margin: 'auto'\n        };\n        return (\n            <div>\n                <div>\n                    {\n                        // Reference: https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator\n                        this.state.isLoaded &&\n                        <CanvasJSStockChart containerProps={containerProps} options={options}\n                            onRef={ref => this.chart = ref}\n                        />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { darkTheme: state.theme.darkMode }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Chart); ","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/DayChart.js",["248"],"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CanvasJSReact from './assets/canvasjs.stock.react';\nlet CanvasJS = CanvasJSReact.CanvasJS;\nconst CanvasJSStockChart = CanvasJSReact.CanvasJSStockChart;\n\nconst risingColor = '#2a9d8f';\nconst fallingColor = '#e63946';\n\n\nclass Chart extends Component {\n\n    state = {\n        dataPoints1: [],\n        dataPoints2: [],\n        dataPoints3: [],\n        isLoaded: false,\n        break: [],\n        ma: [],\n    };\n\n\n    componentDidMount() {\n\n        //set data from props to variables\n        const loadData = (sData) => {\n            let dps1 = [], dps2 = [], dps3 = [];\n            sData.map(data => {\n                dps1.push({\n                    x: new Date(data.date),\n                    y: [\n                        Number(data.open),\n                        Number(data.high),\n                        Number(data.low),\n                        Number(data.close)\n                    ],\n                });\n                dps2.push({ x: new Date(data.date), y: Number(data.volume) });\n                dps3.push({ x: new Date(data.date), y: Number(data.close) });\n            });\n\n            //set color to the data\n            const changeBorderColor = (data) => {\n                for (let i = 0; i < data.length; i++) {\n                    data[i].color = (data[i].y[0] <= data[i].y[3]) ? risingColor : fallingColor;\n                }\n            };\n            changeBorderColor(dps1);\n\n            //set variables to the state\n            this.setState({\n                isLoaded: true,\n                dataPoints1: dps1,\n                dataPoints2: dps2,\n                dataPoints3: dps3\n            });\n\n            //create break data and set it into state\n            const addbreaks = (data) => {\n                const customBreaks = [];\n                for (let i = 1; i < data.length; i++) {\n                    const diffBetweenDps = Date.parse(data[i].x) - Date.parse(data[i - 1].x);\n                    if (diffBetweenDps > (24 * 60 * 60 * 1000)) {\n                        const startValue = new Date(Date.parse(data[i - 1].x) + (24 * 60 * 60 * 1000));\n                        const endValue = data[i].x;\n                        customBreaks.push({\n                            startValue: startValue,\n                            endValue: endValue,\n                            spacing: 0,\n                            lineThickness: 0,\n                        })\n                    }\n                };\n\n                this.setState({ break: customBreaks })\n            };\n            addbreaks(dps1)\n\n            //function for moving average\n            const sma = (dps, num, name, color) => {\n                const result = []\n\n                if (dps.length <= num) return [];\n                for (let i = num; i < dps.length; i++) {\n                    let total = 0;\n                    for (let j = (i - num); j < i; j++) {\n                        total += dps[j].y[3];\n                    }\n                    result.push({\n                        x: dps[i].x,\n                        y: total / num,\n                        toolTipContent: null,\n                    })\n                }\n                return {\n                    type: 'spline',\n                    markerSize: 0,\n                    name: name,\n                    dataPoints: result,\n                    showInLegend: true,\n                    lineThickness: 1.5,\n                    legendText: name,\n                    color: color,\n\n                };\n            }\n            const maLine = [\n                sma(dps1, 5, 'MA5', '#f39237'),\n                sma(dps1, 10, 'MA10', '#40bcd8'),\n                sma(dps1, 20, 'MA20', '#b388eb'),\n                sma(dps1, 30, 'MA30', '#1c77c3'),\n                sma(dps1, 60, 'MA60', '#97d8c4'),\n            ]\n            // maLine.push(sma(dps1, 5, 'MA5', '#f39237'));\n            // maLine.push(sma(dps1, 10, 'MA10', '#40bcd8'));\n            // maLine.push(sma(dps1, 20, 'MA20', '#b388eb'));\n            // maLine.push(sma(dps1, 30, 'MA30', '#1c77c3'));\n            // maLine.push(sma(dps1, 60, 'MA60', '#97d8c4'));\n\n            this.setState({ ma: maLine });\n        };\n\n        loadData(this.props.stockData);\n\n    };\n\n    componentWillUnmount() {\n        this.setState({\n            dataPoints1: [],\n            dataPoints2: [],\n            dataPoints3: [],\n            isLoaded: false,\n            break: [],\n            ma: [],\n        });\n\n\n    }\n\n    render() {\n        const gridColor = this.props.darkTheme === false ? '#ced4da' : '#939597';\n        const yAxisDetail = {\n            labelFontColor: this.props.darkTheme === false ? 'black' : 'white',\n            labelFontFamily: 'roboto',\n            labelBackgroundColor: this.props.darkTheme === false ? 'rgb(0,0,0,0.1)' : 'rgb(0,0,0,0.4)',\n            tickLength: 0,\n            gridDashType: 'dash',\n            labelPlacement: 'inside',\n            tickPlacement: 'inside',\n            margin: 0,\n            gridColor: gridColor,\n        }\n\n        const renderTheme = () => {\n            return this.props.darkTheme === false ? 'bright2' : 'dark1';\n        }\n\n        const options = {\n            theme: renderTheme(),\n\n            charts: [{\n                axisX: {\n                    lineThickness: 3,\n                    tickLength: 0,\n                    lineColor: gridColor,\n                    labelFormatter: (e) => {\n                        return '';\n                    },\n                    crosshair: {\n                        enabled: true,\n                        snapToDataPoint: true,\n                        color: this.props.darkTheme === false ? 'black' : 'white',\n                        labelFormatter: (e) => {\n                            return '';\n                        },\n                    },\n                    scaleBreaks: {\n                        type: \"straight\",\n                        fillOpacity: 1,\n                        customBreaks: [\n                            ...this.state.break\n                        ]\n                    },\n                },\n                axisY: {\n                    ...yAxisDetail,\n                    prefix: '$',\n                    // labelAngle: 345,\n                    labelFontWeight: 500,\n\n                    crosshair: {\n                        enabled: true,\n                        labelFontSize: 10,\n                        labelFontFamily: 'roboto',\n                        color: this.props.darkTheme === false ? 'black' : 'white',\n                    },\n                },\n                toolTip: {\n                    shared: true,\n                    fontFamily: 'Roboto',\n                    fontSize: 12,\n                    frontWeight: 300,\n                    backgroundColor: this.props.darkTheme === false ? 'rbg(255,255,255,0.7)' : 'rgb(42,42,42,0.8)',\n                },\n                legend: {\n                    dockInsidePlotArea: true,\n                    verticalAlign: 'top',\n                    horizontalAlign: 'center',\n                    fontFamily: 'roboto',\n                    fontSize: 11,\n                    fontWeight: '350',\n                    itemclick: (e) => {\n                        if (typeof (e.dataSeries.visible) === \"undefined\" || e.dataSeries.visible) {\n                            e.dataSeries.visible = false;\n                        } else {\n                            e.dataSeries.visible = true;\n                        }\n                        this.chart.render();\n                    },\n                    itemTextFormatter: (e) => {\n                        return ''\n                    }\n                },\n                data: [{\n                    name: 'Price (in USD)',\n                    yValueFormatString: '$#,###.##',\n                    type: 'candlestick',\n                    dataPoints: this.state.dataPoints1,\n                    risingColor: this.props.darkTheme === false ? 'white' : '#2a2a2a',\n                    fallingColor: fallingColor,\n                },\n                ...this.state.ma],\n\n            }, {\n                height: 100,\n                axisX: {\n                    title: 'Volume',\n                    labelFontFamily: 'roboto',\n                    labelFontSize: 10,\n                    crosshair: {\n                        enabled: true,\n                        snapToDataPoint: true,\n                        labelFontFamily: 'roboto',\n                        color: this.props.darkTheme === false ? 'black' : 'white',\n                    },\n                    scaleBreaks: {\n                        type: \"straight\",\n                        fillOpacity: 0,\n                        customBreaks: [\n                            ...this.state.break\n                        ]\n                    },\n                    labelFormatter: (e) => {\n                        return '';\n                    },\n                    labelAngle: -20\n                },\n                axisY: {\n                    // prefix: '$',\n                    // tickLength: 0,\n                    // gridDashType: 'dash',\n                    // gridColor: gridColor,\n                    // labelPlacement: 'inside',\n                    // tickPlacement: 'inside',\n                    // labelFontColor: 'white',\n                    // labelBackgroundColor: 'rgb(0,0,0,0.4)',\n                    ...yAxisDetail,\n                    prefix: '$',\n                    labelFormatter: (e) => {\n                        if (e.value > 1000000) {\n                            return e.value / 1000000 + 'M';\n                        } else if (e.value > 1000000) {\n                            return e.value / 1000000 + 'M';\n                        } else if (e.value > 1000) {\n                            return e.value / 1000 + 'K';\n                        } else return e.value;\n                    },\n                },\n                toolTip: {\n                    shared: true,\n                    fontFamily: 'Roboto',\n                    fontSize: 12,\n                    frontWeight: 300,\n                    backgroundColor: this.props.darkTheme === false ? 'rbg(255,255,255,0.7)' : 'rgb(42,42,42,0.8)',\n                },\n                data: [{\n                    name: 'Volume',\n                    yValueFormatString: '$#,###.##',\n                    type: 'column',\n                    color: '#f5cb5c',\n                    dataPoints: this.state.dataPoints2\n                }]\n            }],\n            navigator: {\n\n                height: 40,\n                dynamicUpdate: false,\n                slider: {\n                    maskColor: 'grey',\n                    maskOpacity: .3,\n                    handleHeight: 25,\n                },\n                data: [{\n                    type: 'line',\n                    markerSize: 0,\n                    dataPoints: this.state.dataPoints3,\n                    color: '#275dad',\n                }],\n                axisX: {\n                    interval: 3,\n                    intervalType: 'month',\n                    ...yAxisDetail,\n                    // labelFontFamily: 'roboto',\n                    // labelFontColor: 'white',\n                    // labelFontSize: 11,\n                    // labelBackgroundColor: 'rgb(0,0,0,0.6)',\n                    // labelFontWeight: '300',\n                    labelFormatter: (e) => {\n                        return CanvasJS.formatDate(e.value, \"MMM YY\");\n                    },\n                    scaleBreaks: {\n                        type: 'straight',\n                        fillOpacity: 1,\n                        customBreaks: [\n                            ...this.state.break\n                        ]\n                    },\n                },\n            },\n            rangeSelector: {\n                label: '',\n                selectedRangeButtonIndex: 2,\n                buttons: [{\n                    range: 1,\n                    rangeType: 'month',\n                    label: '1M'\n                }, {\n                    range: 3,\n                    rangeType: 'month',\n                    label: '3M'\n                }, {\n                    range: 6,\n                    rangeType: 'month',\n                    label: '6M'\n                }, {\n                    rangeType: 'ytd',\n                    label: 'YTD'\n                }, {\n                    range: 1,\n                    rangeType: \"year\",\n                    label: \"1Y\"\n                }, {\n                    rangeType: 'all',\n                    label: 'All' //Change it to \"All\"\n                }],\n                buttonStyle: {\n                    backgroundColorOnHover: 'rgba(0, 0, 0, 0.0)',\n                    backgroundColorOnSelect: 'rgba(0, 0,0 , 0.5)',\n                    backgroundColor: 'rgba(0, 0, 0, 0.0)',\n                    borderThickness: 0,\n                    labelFontColor: '#8d99ae',\n                    labelFontColorOnHover: '#e9ecef',\n                    labelFontSize: 11,\n                    labelFontStyle: 'bold',\n                    labelFontFamily: 'roboto',\n                },\n                inputFields: {\n                    style: {\n                        fontSize: 10,\n                        fontColor: '#8d99ae',\n                        fontFamily: 'roboto',\n                        fontStyle: 'bold',\n                        borderThickness: 0,\n                        padding: { left: 2, right: 2, top: 1, bottom: 1 },\n                        backgroundColor: 'rgba(0, 0,0 , 0)',\n                    },\n                },\n            },\n            animationEnabled: true,\n            animationDuration: 300,\n        };\n        const containerProps = {\n            maxWidth: '1000px',\n            width: '100%',\n            height: '500px',\n            margin: 'auto'\n        };\n        return (\n            <div>\n                <div>\n                    {\n                        // Reference: https://reactjs.org/docs/conditional-rendering.html#inline-if-with-logical--operator\n                        this.state.isLoaded &&\n                        <CanvasJSStockChart containerProps={containerProps} options={options}\n                            onRef={ref => this.chart = ref}\n                        />\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { darkTheme: state.theme.darkMode }\n}\n\nexport default connect(\n    mapStateToProps,\n    null\n)(Chart); ","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/assets/canvasjs.stock.react.js",["249"],"﻿/*\r\nCanvasJS React StockCharts - https://canvasjs.com/\r\nCopyright 2020 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\n\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.stock.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nclass CanvasJSStockChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"600px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-stockchart-container-\" + CanvasJSStockChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.stockChart = new CanvasJS.StockChart(this.chartContainerId, this.options);\r\n\t\tthis.stockChart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.stockChart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.stockChart.options = this.props.options;\r\n\t\tthis.stockChart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.stockChart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJSStockChart: CanvasJSStockChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","/Users/ling/Desktop/React_App_Test/MarketView/src/components/reusable/Chart/assets/canvasjs.stock.min.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/ThemeSwitch.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/ResponsiveAppBar/SearchBar.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/components/auth/GoogleAuth.js",[],"/Users/ling/Desktop/React_App_Test/MarketView/src/apis/polygonioAPI.js",[],{"ruleId":"250","replacedBy":"251"},{"ruleId":"252","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":19,"column":11,"nodeType":"256","messageId":"257","endLine":19,"endColumn":16},{"ruleId":"254","severity":1,"message":"255","line":17,"column":29,"nodeType":"256","messageId":"257","endLine":17,"endColumn":34},{"ruleId":"254","severity":1,"message":"255","line":20,"column":11,"nodeType":"256","messageId":"257","endLine":20,"endColumn":16},{"ruleId":"258","severity":1,"message":"259","line":11,"column":1,"nodeType":"260","endLine":26,"endColumn":3},{"ruleId":"258","severity":1,"message":"259","line":9,"column":1,"nodeType":"260","endLine":16,"endColumn":3},{"ruleId":"258","severity":1,"message":"259","line":3,"column":1,"nodeType":"260","endLine":10,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":8,"column":1,"nodeType":"260","endLine":17,"endColumn":3},{"ruleId":"258","severity":1,"message":"259","line":8,"column":1,"nodeType":"260","endLine":15,"endColumn":3},{"ruleId":"258","severity":1,"message":"259","line":8,"column":1,"nodeType":"260","endLine":15,"endColumn":3},{"ruleId":"258","severity":1,"message":"259","line":3,"column":1,"nodeType":"260","endLine":10,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":3,"column":1,"nodeType":"260","endLine":16,"endColumn":2},{"ruleId":"258","severity":1,"message":"259","line":3,"column":1,"nodeType":"260","endLine":13,"endColumn":3},{"ruleId":"254","severity":1,"message":"261","line":163,"column":11,"nodeType":"256","messageId":"257","endLine":163,"endColumn":18},{"ruleId":"258","severity":1,"message":"259","line":3,"column":1,"nodeType":"260","endLine":15,"endColumn":2},{"ruleId":"254","severity":1,"message":"262","line":18,"column":8,"nodeType":"256","messageId":"257","endLine":18,"endColumn":21},{"ruleId":"254","severity":1,"message":"263","line":20,"column":7,"nodeType":"256","messageId":"257","endLine":20,"endColumn":24},{"ruleId":"254","severity":1,"message":"264","line":9,"column":22,"nodeType":"256","messageId":"257","endLine":9,"endColumn":28},{"ruleId":"254","severity":1,"message":"265","line":9,"column":46,"nodeType":"256","messageId":"257","endLine":9,"endColumn":58},{"ruleId":"254","severity":1,"message":"266","line":11,"column":8,"nodeType":"256","messageId":"257","endLine":11,"endColumn":20},{"ruleId":"254","severity":1,"message":"267","line":12,"column":8,"nodeType":"256","messageId":"257","endLine":12,"endColumn":21},{"ruleId":"254","severity":1,"message":"268","line":13,"column":8,"nodeType":"256","messageId":"257","endLine":13,"endColumn":17},{"ruleId":"254","severity":1,"message":"269","line":14,"column":8,"nodeType":"256","messageId":"257","endLine":14,"endColumn":16},{"ruleId":"254","severity":1,"message":"270","line":15,"column":8,"nodeType":"256","messageId":"257","endLine":15,"endColumn":26},{"ruleId":"254","severity":1,"message":"271","line":16,"column":8,"nodeType":"256","messageId":"257","endLine":16,"endColumn":20},{"ruleId":"254","severity":1,"message":"272","line":17,"column":8,"nodeType":"256","messageId":"257","endLine":17,"endColumn":18},{"ruleId":"254","severity":1,"message":"263","line":23,"column":7,"nodeType":"256","messageId":"257","endLine":23,"endColumn":24},{"ruleId":"254","severity":1,"message":"273","line":53,"column":17,"nodeType":"256","messageId":"257","endLine":53,"endColumn":23},{"ruleId":"254","severity":1,"message":"255","line":53,"column":34,"nodeType":"256","messageId":"257","endLine":53,"endColumn":39},{"ruleId":"254","severity":1,"message":"274","line":4,"column":8,"nodeType":"256","messageId":"257","endLine":4,"endColumn":14},{"ruleId":"254","severity":1,"message":"275","line":2,"column":10,"nodeType":"256","messageId":"257","endLine":2,"endColumn":17},{"ruleId":"254","severity":1,"message":"276","line":3,"column":8,"nodeType":"256","messageId":"257","endLine":3,"endColumn":17},{"ruleId":"254","severity":1,"message":"277","line":4,"column":10,"nodeType":"256","messageId":"257","endLine":4,"endColumn":20},{"ruleId":"254","severity":1,"message":"278","line":6,"column":5,"nodeType":"256","messageId":"257","endLine":6,"endColumn":10},{"ruleId":"254","severity":1,"message":"279","line":6,"column":12,"nodeType":"256","messageId":"257","endLine":6,"endColumn":21},{"ruleId":"254","severity":1,"message":"280","line":6,"column":34,"nodeType":"256","messageId":"257","endLine":6,"endColumn":42},{"ruleId":"254","severity":1,"message":"281","line":16,"column":7,"nodeType":"256","messageId":"257","endLine":16,"endColumn":22},{"ruleId":"254","severity":1,"message":"282","line":29,"column":7,"nodeType":"256","messageId":"257","endLine":29,"endColumn":16},{"ruleId":"254","severity":1,"message":"283","line":5,"column":5,"nodeType":"256","messageId":"257","endLine":5,"endColumn":13},{"ruleId":"254","severity":1,"message":"284","line":28,"column":28,"nodeType":"256","messageId":"257","endLine":28,"endColumn":32},{"ruleId":"254","severity":1,"message":"285","line":28,"column":39,"nodeType":"256","messageId":"257","endLine":28,"endColumn":43},{"ruleId":"286","severity":1,"message":"287","line":29,"column":28,"nodeType":"288","messageId":"289","endLine":29,"endColumn":30},{"ruleId":"286","severity":1,"message":"287","line":29,"column":28,"nodeType":"288","messageId":"289","endLine":29,"endColumn":30},{"ruleId":"290","severity":1,"message":"291","line":1,"column":1,"nodeType":"292","messageId":"293","fix":"294"},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'resStat' is assigned a value but never used.","'AccountCircle' is defined but never used.","'drawerBreakPoints' is assigned a value but never used.","'Hidden' is defined but never used.","'ListItemIcon' is defined but never used.","'MenuBookIcon' is defined but never used.","'HighlightIcon' is defined but never used.","'StarsIcon' is defined but never used.","'HomeIcon' is defined but never used.","'ContactSupportIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'Typography' is defined but never used.","'window' is assigned a value but never used.","'AppBar' is defined but never used.","'connect' is defined but never used.","'PropTypes' is defined but never used.","'makeStyles' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableRow' is defined but never used.","'StyledTableCell' is assigned a value but never used.","'textColor' is assigned a value but never used.","'CanvasJS' is assigned a value but never used.","'dps2' is assigned a value but never used.","'dps3' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"297","text":"298"},"no-global-assign","no-unsafe-negation",[-1,0],""]